       """
       Set the datadir path to the local data directory
    1: """
    1: import os
    1: import sys
    1: from distutils.spawn import find_executable
       
    1: from pyproj.exceptions import DataDirError
       
    1: _USER_PROJ_DATA = None
    1: _VALIDATED_PROJ_DATA = None
       
       
    1: def set_data_dir(proj_data_dir):
           """
           Set the data directory for PROJ to use.
       
           Parameters
           ----------
           proj_data_dir: str
               The path to the PROJ data directory.
           """
           global _USER_PROJ_DATA
           global _VALIDATED_PROJ_DATA
           _USER_PROJ_DATA = proj_data_dir
           # set to none to re-validate
           _VALIDATED_PROJ_DATA = None
           # need to reset the global PROJ context
           # to prevent core dumping if the data directory
           # is not found.
           from pyproj._datadir import pyproj_global_context_initialize
       
           pyproj_global_context_initialize()
       
       
    1: def append_data_dir(proj_data_dir):
           """
           Add an additional data directory for PROJ to use.
       
           Parameters
           ----------
           proj_data_dir: str
               The path to the PROJ data directory.
           """
           set_data_dir(os.pathsep.join([get_data_dir(), proj_data_dir]))
       
       
    1: def get_data_dir():
           """
           The order of preference for the data directory is:
       
           1. The one set by pyproj.datadir.set_data_dir (if exists & valid)
           2. The internal proj directory (if exists & valid)
           3. The directory in PROJ_LIB (if exists & valid)
           4. The directory on sys.prefix (if exists & valid)
           5. The directory on the PATH (if exists & valid)
       
           Returns
           -------
           str: The valid data directory.
       
           """
           # to avoid re-validating
           global _VALIDATED_PROJ_DATA
    1:     if _VALIDATED_PROJ_DATA is not None:
               return _VALIDATED_PROJ_DATA
           global _USER_PROJ_DATA
    1:     internal_datadir = os.path.join(
    1:         os.path.dirname(os.path.abspath(__file__)), "proj_dir", "share", "proj"
           )
    1:     proj_lib_dirs = os.environ.get("PROJ_LIB", "")
    1:     prefix_datadir = os.path.join(sys.prefix, "share", "proj")
       
    1:     def valid_data_dir(potential_data_dir):
    1:         if potential_data_dir is not None and os.path.exists(
    1:             os.path.join(potential_data_dir, "proj.db")
               ):
    1:             return True
               return False
       
    1:     def valid_data_dirs(potential_data_dirs):
    1:         if potential_data_dirs is None:
    1:             return False
               for proj_data_dir in potential_data_dirs.split(os.pathsep):
                   if valid_data_dir(proj_data_dir):
                       return True
                       break
               return None
       
    1:     if valid_data_dirs(_USER_PROJ_DATA):
               _VALIDATED_PROJ_DATA = _USER_PROJ_DATA
    1:     elif valid_data_dir(internal_datadir):
    1:         _VALIDATED_PROJ_DATA = internal_datadir
           elif valid_data_dirs(proj_lib_dirs):
               _VALIDATED_PROJ_DATA = proj_lib_dirs
           elif valid_data_dir(prefix_datadir):
               _VALIDATED_PROJ_DATA = prefix_datadir
           else:
               proj_exe = find_executable("proj")
               if proj_exe is not None:
                   system_proj_dir = os.path.join(
                       os.path.dirname(os.path.dirname(proj_exe)), "share", "proj"
                   )
                   if valid_data_dir(system_proj_dir):
                       _VALIDATED_PROJ_DATA = system_proj_dir
       
    1:     if _VALIDATED_PROJ_DATA is None:
               raise DataDirError(
                   "Valid PROJ data directory not found. "
                   "Either set the path using the environmental variable PROJ_LIB or "
                   "with `pyproj.datadir.set_data_dir`."
               )
    1:     return _VALIDATED_PROJ_DATA
