       """
       Many places in prompt_toolkit can take either plain text, or formatted text.
       For instance the :func:`~prompt_toolkit.shortcuts.prompt` function takes either
       plain text or formatted text for the prompt. The
       :class:`~prompt_toolkit.layout.FormattedTextControl` can also take either plain
       text or formatted text.
       
       In any case, there is an input that can either be just plain text (a string),
       an :class:`.HTML` object, an :class:`.ANSI` object or a sequence of
       `(style_string, text)` tuples. The :func:`.to_formatted_text` conversion
       function takes any of these and turns all of them into such a tuple sequence.
    1: """
    1: from __future__ import unicode_literals
    1: from .base import to_formatted_text, is_formatted_text, Template, merge_formatted_text, FormattedText
    1: from .html import HTML
    1: from .ansi import ANSI
    1: from .pygments import PygmentsTokens
    1: from .utils import fragment_list_len, fragment_list_width, fragment_list_to_text, split_lines
       
       __all__ = [
           # Base.
    1:     'to_formatted_text',
    1:     'is_formatted_text',
    1:     'Template',
    1:     'merge_formatted_text',
    1:     'FormattedText',
       
           # HTML.
    1:     'HTML',
       
           # ANSI.
    1:     'ANSI',
       
           # Pygments.
    1:     'PygmentsTokens',
       
           # Utils.
    1:     'fragment_list_len',
    1:     'fragment_list_width',
    1:     'fragment_list_to_text',
    1:     'split_lines',
       ]
