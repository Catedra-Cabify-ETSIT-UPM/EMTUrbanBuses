    1: """Import basic exposure of libzmq C API as a backend"""
       
       # Copyright (C) PyZMQ Developers
       # Distributed under the terms of the Modified BSD License.
       
       public_api = [
    1:     'Context',
    1:     'Socket',
    1:     'Frame',
    1:     'Message',
    1:     'device',
    1:     'proxy',
    1:     'proxy_steerable',
    1:     'zmq_poll',
    1:     'strerror',
    1:     'zmq_errno',
    1:     'has',
    1:     'curve_keypair',
    1:     'curve_public',
    1:     'constants',
    1:     'zmq_version_info',
    1:     'IPC_PATH_MAX_LEN',
       ]
       
    1: def select_backend(name):
           """Select the pyzmq backend"""
    1:     try:
    1:         mod = __import__(name, fromlist=public_api)
           except ImportError:
               raise
           except Exception as e:
               import sys
               from zmq.utils.sixcerpt import reraise
               exc_info = sys.exc_info()
               reraise(ImportError, ImportError("Importing %s failed with %s" % (name, e)), exc_info[2])
           
    1:     ns = {}
   17:     for key in public_api:
   16:         ns[key] = getattr(mod, key)
    1:     return ns
