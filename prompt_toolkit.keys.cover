    1: from __future__ import unicode_literals
       
       __all__ = [
    1:     'Keys',
    1:     'ALL_KEYS',
       ]
       
       
    2: class Keys(object):
           """
           List of keys for use in key bindings.
    1:     """
    1:     Escape = 'escape'  # Also Control-[
       
    1:     ControlAt = 'c-@'  # Also Control-Space.
       
    1:     ControlA = 'c-a'
    1:     ControlB = 'c-b'
    1:     ControlC = 'c-c'
    1:     ControlD = 'c-d'
    1:     ControlE = 'c-e'
    1:     ControlF = 'c-f'
    1:     ControlG = 'c-g'
    1:     ControlH = 'c-h'
    1:     ControlI = 'c-i'  # Tab
    1:     ControlJ = 'c-j'  # Newline
    1:     ControlK = 'c-k'
    1:     ControlL = 'c-l'
    1:     ControlM = 'c-m'  # Carriage return
    1:     ControlN = 'c-n'
    1:     ControlO = 'c-o'
    1:     ControlP = 'c-p'
    1:     ControlQ = 'c-q'
    1:     ControlR = 'c-r'
    1:     ControlS = 'c-s'
    1:     ControlT = 'c-t'
    1:     ControlU = 'c-u'
    1:     ControlV = 'c-v'
    1:     ControlW = 'c-w'
    1:     ControlX = 'c-x'
    1:     ControlY = 'c-y'
    1:     ControlZ = 'c-z'
       
    1:     ControlBackslash   = 'c-\\'
    1:     ControlSquareClose = 'c-]'
    1:     ControlCircumflex  = 'c-^'
    1:     ControlUnderscore  = 'c-_'
       
    1:     ControlLeft        = 'c-left'
    1:     ControlRight       = 'c-right'
    1:     ControlUp          = 'c-up'
    1:     ControlDown        = 'c-down'
       
    1:     Up          = 'up'
    1:     Down        = 'down'
    1:     Right       = 'right'
    1:     Left        = 'left'
       
    1:     ShiftLeft   = 's-left'
    1:     ShiftUp     = 's-up'
    1:     ShiftDown   = 's-down'
    1:     ShiftRight  = 's-right'
    1:     ShiftDelete = 's-delete'
    1:     BackTab     = 's-tab'  # shift + tab
       
    1:     Home        = 'home'
    1:     End         = 'end'
    1:     Delete      = 'delete'
    1:     ControlDelete = 'c-delete'
    1:     PageUp      = 'pageup'
    1:     PageDown    = 'pagedown'
    1:     Insert      = 'insert'
       
    1:     F1 = 'f1'
    1:     F2 = 'f2'
    1:     F3 = 'f3'
    1:     F4 = 'f4'
    1:     F5 = 'f5'
    1:     F6 = 'f6'
    1:     F7 = 'f7'
    1:     F8 = 'f8'
    1:     F9 = 'f9'
    1:     F10 = 'f10'
    1:     F11 = 'f11'
    1:     F12 = 'f12'
    1:     F13 = 'f13'
    1:     F14 = 'f14'
    1:     F15 = 'f15'
    1:     F16 = 'f16'
    1:     F17 = 'f17'
    1:     F18 = 'f18'
    1:     F19 = 'f19'
    1:     F20 = 'f20'
    1:     F21 = 'f21'
    1:     F22 = 'f22'
    1:     F23 = 'f23'
    1:     F24 = 'f24'
       
           # Matches any key.
    1:     Any = '<any>'
       
           # Special.
    1:     ScrollUp    = '<scroll-up>'
    1:     ScrollDown  = '<scroll-down>'
       
    1:     CPRResponse = '<cursor-position-response>'
    1:     Vt100MouseEvent = '<vt100-mouse-event>'
    1:     WindowsMouseEvent = '<windows-mouse-event>'
    1:     BracketedPaste = '<bracketed-paste>'
       
           # For internal use: key which is ignored.
           # (The key binding for this key should not do anything.)
    1:     Ignore = '<ignore>'
       
       
  113: ALL_KEYS = [getattr(Keys, k) for k in dir(Keys) if not k.startswith('_')]
       
       
       # Aliases.
       KEY_ALIASES = {
    1:     'backspace': 'c-h',
    1:     'c-space': 'c-@',
    1:     'enter': 'c-m',
    1:     'tab': 'c-i',
       }
       
       
       # The following should not end up in ALL_KEYS, but we still want them in Keys
       # for backwards-compatibility.
    1: Keys.ControlSpace = Keys.ControlAt
    1: Keys.Tab          = Keys.ControlI
    1: Keys.Enter        = Keys.ControlM
    1: Keys.Backspace    = Keys.ControlH
