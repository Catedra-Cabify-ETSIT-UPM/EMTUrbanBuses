    1: import importlib
    1: import os
       
       aliases = {
    1:     'qt4': 'qt',
    1:     'gtk2': 'gtk',
       }
       
       backends = [
    1:     'qt', 'qt4', 'qt5',
    1:     'gtk', 'gtk2', 'gtk3',
    1:     'tk',
    1:     'wx',
    1:     'pyglet', 'glut',
    1:     'osx',
       ]
       
    1: registered = {}
       
    1: def register(name, inputhook):
           """Register the function *inputhook* as an event loop integration."""
           registered[name] = inputhook
       
    2: class UnknownBackend(KeyError):
    1:     def __init__(self, name):
               self.name = name
       
    1:     def __str__(self):
               return ("No event loop integration for {!r}. "
                       "Supported event loops are: {}").format(self.name,
                                           ', '.join(backends + sorted(registered)))
       
    1: def get_inputhook_name_and_func(gui):
           if gui in registered:
               return gui, registered[gui]
       
           if gui not in backends:
               raise UnknownBackend(gui)
       
           if gui in aliases:
               return get_inputhook_name_and_func(aliases[gui])
       
           gui_mod = gui
           if gui == 'qt5':
               os.environ['QT_API'] = 'pyqt5'
               gui_mod = 'qt'
       
           mod = importlib.import_module('IPython.terminal.pt_inputhooks.'+gui_mod)
           return gui, mod.inputhook
