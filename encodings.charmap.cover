       """ Generic Python Character Mapping Codec.
       
           Use this codec directly rather than through the automatic
           conversion mechanisms supplied by unicode() and .encode().
       
       
       Written by Marc-Andre Lemburg (mal@lemburg.com).
       
       (c) Copyright CNRI, All Rights Reserved. NO WARRANTY.
       
    1: """#"
       
    1: import codecs
       
       ### Codec APIs
       
    2: class Codec(codecs.Codec):
       
           # Note: Binding these as C functions will result in the class not
           # converting them to methods. This is intended.
    1:     encode = codecs.charmap_encode
    1:     decode = codecs.charmap_decode
       
    2: class IncrementalEncoder(codecs.IncrementalEncoder):
    1:     def __init__(self, errors='strict', mapping=None):
               codecs.IncrementalEncoder.__init__(self, errors)
               self.mapping = mapping
       
    1:     def encode(self, input, final=False):
               return codecs.charmap_encode(input, self.errors, self.mapping)[0]
       
    2: class IncrementalDecoder(codecs.IncrementalDecoder):
    1:     def __init__(self, errors='strict', mapping=None):
               codecs.IncrementalDecoder.__init__(self, errors)
               self.mapping = mapping
       
    1:     def decode(self, input, final=False):
               return codecs.charmap_decode(input, self.errors, self.mapping)[0]
       
    2: class StreamWriter(Codec,codecs.StreamWriter):
       
    1:     def __init__(self,stream,errors='strict',mapping=None):
               codecs.StreamWriter.__init__(self,stream,errors)
               self.mapping = mapping
       
    1:     def encode(self,input,errors='strict'):
               return Codec.encode(input,errors,self.mapping)
       
    2: class StreamReader(Codec,codecs.StreamReader):
       
    1:     def __init__(self,stream,errors='strict',mapping=None):
               codecs.StreamReader.__init__(self,stream,errors)
               self.mapping = mapping
       
    1:     def decode(self,input,errors='strict'):
               return Codec.decode(input,errors,self.mapping)
       
       ### encodings module API
       
    1: def getregentry():
    1:     return codecs.CodecInfo(
    1:         name='charmap',
    1:         encode=Codec.encode,
    1:         decode=Codec.decode,
    1:         incrementalencoder=IncrementalEncoder,
    1:         incrementaldecoder=IncrementalDecoder,
    1:         streamwriter=StreamWriter,
    1:         streamreader=StreamReader,
           )
