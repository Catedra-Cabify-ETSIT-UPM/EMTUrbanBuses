    1: """Abstract base class for kernel clients"""
       
       #-----------------------------------------------------------------------------
       #  Copyright (c) The Jupyter Development Team
       #
       #  Distributed under the terms of the BSD License.  The full license is in
       #  the file COPYING, distributed as part of this software.
       #-----------------------------------------------------------------------------
       
       #-----------------------------------------------------------------------------
       # Imports
       #-----------------------------------------------------------------------------
       
    1: import abc
       
    1: from ipython_genutils.py3compat import with_metaclass
       
       #-----------------------------------------------------------------------------
       # Main kernel client class
       #-----------------------------------------------------------------------------
       
    2: class KernelClientABC(with_metaclass(abc.ABCMeta, object)):
           """KernelManager ABC.
       
           The docstrings for this class can be found in the base implementation:
       
           `jupyter_client.client.KernelClient`
    1:     """
       
    1:     @abc.abstractproperty
           def kernel(self):
               pass
       
    1:     @abc.abstractproperty
           def shell_channel_class(self):
               pass
       
    1:     @abc.abstractproperty
           def iopub_channel_class(self):
               pass
       
    1:     @abc.abstractproperty
           def hb_channel_class(self):
               pass
       
    1:     @abc.abstractproperty
           def stdin_channel_class(self):
               pass
       
           #--------------------------------------------------------------------------
           # Channel management methods
           #--------------------------------------------------------------------------
       
    1:     @abc.abstractmethod
    1:     def start_channels(self, shell=True, iopub=True, stdin=True, hb=True):
               pass
       
    1:     @abc.abstractmethod
           def stop_channels(self):
               pass
       
    1:     @abc.abstractproperty
           def channels_running(self):
               pass
       
    1:     @abc.abstractproperty
           def shell_channel(self):
               pass
       
    1:     @abc.abstractproperty
           def iopub_channel(self):
               pass
       
    1:     @abc.abstractproperty
           def stdin_channel(self):
               pass
       
    1:     @abc.abstractproperty
           def hb_channel(self):
               pass
