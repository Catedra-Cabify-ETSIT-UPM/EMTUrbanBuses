    1: from pandas._config import get_option
       
    1: from pandas.plotting._matplotlib.boxplot import (
           BoxPlot,
           boxplot,
           boxplot_frame,
           boxplot_frame_groupby,
       )
    1: from pandas.plotting._matplotlib.converter import deregister, register
    1: from pandas.plotting._matplotlib.core import (
           AreaPlot,
           BarhPlot,
           BarPlot,
           HexBinPlot,
           LinePlot,
           PiePlot,
           ScatterPlot,
       )
    1: from pandas.plotting._matplotlib.hist import HistPlot, KdePlot, hist_frame, hist_series
    1: from pandas.plotting._matplotlib.misc import (
           andrews_curves,
           autocorrelation_plot,
           bootstrap_plot,
           lag_plot,
           parallel_coordinates,
           radviz,
           scatter_matrix,
       )
    1: from pandas.plotting._matplotlib.timeseries import tsplot
    1: from pandas.plotting._matplotlib.tools import table
       
       PLOT_CLASSES = {
    1:     "line": LinePlot,
    1:     "bar": BarPlot,
    1:     "barh": BarhPlot,
    1:     "box": BoxPlot,
    1:     "hist": HistPlot,
    1:     "kde": KdePlot,
    1:     "area": AreaPlot,
    1:     "pie": PiePlot,
    1:     "scatter": ScatterPlot,
    1:     "hexbin": HexBinPlot,
       }
       
    1: if get_option("plotting.matplotlib.register_converters"):
    1:     register(explicit=False)
       
       
    1: def plot(data, kind, **kwargs):
           # Importing pyplot at the top of the file (before the converters are
           # registered) causes problems in matplotlib 2 (converters seem to not
           # work)
           import matplotlib.pyplot as plt
       
           if kwargs.pop("reuse_plot", False):
               ax = kwargs.get("ax")
               if ax is None and len(plt.get_fignums()) > 0:
                   with plt.rc_context():
                       ax = plt.gca()
                   kwargs["ax"] = getattr(ax, "left_ax", ax)
           plot_obj = PLOT_CLASSES[kind](data, **kwargs)
           plot_obj.generate()
           plot_obj.draw()
           return plot_obj.result
       
       
       __all__ = [
    1:     "plot",
    1:     "hist_series",
    1:     "hist_frame",
    1:     "boxplot",
    1:     "boxplot_frame",
    1:     "boxplot_frame_groupby",
    1:     "tsplot",
    1:     "table",
    1:     "andrews_curves",
    1:     "autocorrelation_plot",
    1:     "bootstrap_plot",
    1:     "lag_plot",
    1:     "parallel_coordinates",
    1:     "radviz",
    1:     "scatter_matrix",
    1:     "register",
    1:     "deregister",
       ]
