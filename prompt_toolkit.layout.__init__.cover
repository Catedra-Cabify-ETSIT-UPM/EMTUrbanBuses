       """
       Command line layout definitions
       -------------------------------
       
       The layout of a command line interface is defined by a Container instance.
       There are two main groups of classes here. Containers and controls:
       
       - A container can contain other containers or controls, it can have multiple
         children and it decides about the dimensions.
       - A control is responsible for rendering the actual content to a screen.
         A control can propose some dimensions, but it's the container who decides
         about the dimensions -- or when the control consumes more space -- which part
         of the control will be visible.
       
       
       Container classes::
       
           - Container (Abstract base class)
              |- HSplit (Horizontal split)
              |- VSplit (Vertical split)
              |- FloatContainer (Container which can also contain menus and other floats)
              `- Window (Container which contains one actual control
       
       Control classes::
       
           - UIControl (Abstract base class)
              |- FormattedTextControl (Renders formatted text, or a simple list of text fragments)
              `- BufferControl (Renders an input buffer.)
       
       
       Usually, you end up wrapping every control inside a `Window` object, because
       that's the only way to render it in a layout.
       
       There are some prepared toolbars which are ready to use::
       
       - SystemToolbar (Shows the 'system' input buffer, for entering system commands.)
       - ArgToolbar (Shows the input 'arg', for repetition of input commands.)
       - SearchToolbar (Shows the 'search' input buffer, for incremental search.)
       - CompletionsToolbar (Shows the completions of the current buffer.)
       - ValidationToolbar (Shows validation errors of the current buffer.)
       
       And one prepared menu:
       
       - CompletionsMenu
       
    1: """
    1: from __future__ import unicode_literals
    1: from .containers import Container, HSplit, VSplit, FloatContainer, Float, Window, WindowAlign, WindowRenderInfo, ConditionalContainer, ScrollOffsets, ColorColumn, to_container, to_window, is_container, HorizontalAlign, VerticalAlign, DynamicContainer
    1: from .controls import BufferControl, SearchBufferControl, DummyControl, FormattedTextControl, UIControl, UIContent
    1: from .dimension import Dimension, D, sum_layout_dimensions, max_layout_dimensions, to_dimension, is_dimension
    1: from .layout import Layout, InvalidLayoutError, walk
    1: from .margins import Margin, NumberedMargin, ScrollbarMargin, ConditionalMargin, PromptMargin
    1: from .menus import CompletionsMenu, MultiColumnCompletionsMenu
       
       __all__ = [
           # Layout.
    1:     'Layout',
    1:     'InvalidLayoutError',
    1:     'walk',
       
           # Dimensions.
    1:     'Dimension',
    1:     'D',
    1:     'sum_layout_dimensions',
    1:     'max_layout_dimensions',
    1:     'to_dimension',
    1:     'is_dimension',
       
           # Containers.
    1:     'Container',
    1:     'HorizontalAlign',
    1:     'VerticalAlign',
    1:     'HSplit',
    1:     'VSplit',
    1:     'FloatContainer',
    1:     'Float',
    1:     'WindowAlign',
    1:     'Window',
    1:     'WindowRenderInfo',
    1:     'ConditionalContainer',
    1:     'ScrollOffsets',
    1:     'ColorColumn',
    1:     'to_container',
    1:     'to_window',
    1:     'is_container',
    1:     'DynamicContainer',
       
           # Controls.
    1:     'BufferControl',
    1:     'SearchBufferControl',
    1:     'DummyControl',
    1:     'FormattedTextControl',
    1:     'UIControl',
    1:     'UIContent',
       
           # Margins.
    1:     'Margin',
    1:     'NumberedMargin',
    1:     'ScrollbarMargin',
    1:     'ConditionalMargin',
    1:     'PromptMargin',
       
           # Menus.
    1:     'CompletionsMenu',
    1:     'MultiColumnCompletionsMenu',
       ]
