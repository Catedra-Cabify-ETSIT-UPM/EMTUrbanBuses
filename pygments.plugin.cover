       # -*- coding: utf-8 -*-
       """
           pygments.plugin
           ~~~~~~~~~~~~~~~
       
           Pygments setuptools plugin interface. The methods defined
           here also work if setuptools isn't installed but they just
           return nothing.
       
           lexer plugins::
       
               [pygments.lexers]
               yourlexer = yourmodule:YourLexer
       
           formatter plugins::
       
               [pygments.formatters]
               yourformatter = yourformatter:YourFormatter
               /.ext = yourformatter:YourFormatter
       
           As you can see, you can define extensions for the formatter
           with a leading slash.
       
           syntax plugins::
       
               [pygments.styles]
               yourstyle = yourstyle:YourStyle
       
           filter plugin::
       
               [pygments.filter]
               yourfilter = yourfilter:YourFilter
       
       
           :copyright: Copyright 2006-2019 by the Pygments team, see AUTHORS.
           :license: BSD, see LICENSE for details.
    1: """
    1: LEXER_ENTRY_POINT = 'pygments.lexers'
    1: FORMATTER_ENTRY_POINT = 'pygments.formatters'
    1: STYLE_ENTRY_POINT = 'pygments.styles'
    1: FILTER_ENTRY_POINT = 'pygments.filters'
       
       
    1: def iter_entry_points(group_name):
           try:
               import pkg_resources
           except (ImportError, IOError):
               return []
       
           return pkg_resources.iter_entry_points(group_name)
       
       
    1: def find_plugin_lexers():
           for entrypoint in iter_entry_points(LEXER_ENTRY_POINT):
               yield entrypoint.load()
       
       
    1: def find_plugin_formatters():
           for entrypoint in iter_entry_points(FORMATTER_ENTRY_POINT):
               yield entrypoint.name, entrypoint.load()
       
       
    1: def find_plugin_styles():
           for entrypoint in iter_entry_points(STYLE_ENTRY_POINT):
               yield entrypoint.name, entrypoint.load()
       
       
    1: def find_plugin_filters():
           for entrypoint in iter_entry_points(FILTER_ENTRY_POINT):
               yield entrypoint.name, entrypoint.load()
