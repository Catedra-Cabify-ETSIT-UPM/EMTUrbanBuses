       """
       Qualitative color sequences are appropriate for data that has no natural ordering, such \
       as categories, colors, names, countries etc. The color sequences in this module are \
       mostly meant to be passed in as the `color_discrete_sequence` argument to various functions.
    1: """
       
    1: from ._swatches import _swatches
       
       
    1: def swatches(template=None):
           return _swatches(__name__, globals(), template)
       
       
    1: swatches.__doc__ = _swatches.__doc__
       
       Plotly = [
    1:     "#636EFA",
    1:     "#EF553B",
    1:     "#00CC96",
    1:     "#AB63FA",
    1:     "#FFA15A",
    1:     "#19D3F3",
    1:     "#FF6692",
    1:     "#B6E880",
    1:     "#FF97FF",
    1:     "#FECB52",
       ]
       
       D3 = [
    1:     "#1F77B4",
    1:     "#FF7F0E",
    1:     "#2CA02C",
    1:     "#D62728",
    1:     "#9467BD",
    1:     "#8C564B",
    1:     "#E377C2",
    1:     "#7F7F7F",
    1:     "#BCBD22",
    1:     "#17BECF",
       ]
       G10 = [
    1:     "#3366CC",
    1:     "#DC3912",
    1:     "#FF9900",
    1:     "#109618",
    1:     "#990099",
    1:     "#0099C6",
    1:     "#DD4477",
    1:     "#66AA00",
    1:     "#B82E2E",
    1:     "#316395",
       ]
       T10 = [
    1:     "#4C78A8",
    1:     "#F58518",
    1:     "#E45756",
    1:     "#72B7B2",
    1:     "#54A24B",
    1:     "#EECA3B",
    1:     "#B279A2",
    1:     "#FF9DA6",
    1:     "#9D755D",
    1:     "#BAB0AC",
       ]
       Alphabet = [
    1:     "#AA0DFE",
    1:     "#3283FE",
    1:     "#85660D",
    1:     "#782AB6",
    1:     "#565656",
    1:     "#1C8356",
    1:     "#16FF32",
    1:     "#F7E1A0",
    1:     "#E2E2E2",
    1:     "#1CBE4F",
    1:     "#C4451C",
    1:     "#DEA0FD",
    1:     "#FE00FA",
    1:     "#325A9B",
    1:     "#FEAF16",
    1:     "#F8A19F",
    1:     "#90AD1C",
    1:     "#F6222E",
    1:     "#1CFFCE",
    1:     "#2ED9FF",
    1:     "#B10DA1",
    1:     "#C075A6",
    1:     "#FC1CBF",
    1:     "#B00068",
    1:     "#FBE426",
    1:     "#FA0087",
       ]
       Dark24 = [
    1:     "#2E91E5",
    1:     "#E15F99",
    1:     "#1CA71C",
    1:     "#FB0D0D",
    1:     "#DA16FF",
    1:     "#222A2A",
    1:     "#B68100",
    1:     "#750D86",
    1:     "#EB663B",
    1:     "#511CFB",
    1:     "#00A08B",
    1:     "#FB00D1",
    1:     "#FC0080",
    1:     "#B2828D",
    1:     "#6C7C32",
    1:     "#778AAE",
    1:     "#862A16",
    1:     "#A777F1",
    1:     "#620042",
    1:     "#1616A7",
    1:     "#DA60CA",
    1:     "#6C4516",
    1:     "#0D2A63",
    1:     "#AF0038",
       ]
       Light24 = [
    1:     "#FD3216",
    1:     "#00FE35",
    1:     "#6A76FC",
    1:     "#FED4C4",
    1:     "#FE00CE",
    1:     "#0DF9FF",
    1:     "#F6F926",
    1:     "#FF9616",
    1:     "#479B55",
    1:     "#EEA6FB",
    1:     "#DC587D",
    1:     "#D626FF",
    1:     "#6E899C",
    1:     "#00B5F7",
    1:     "#B68E00",
    1:     "#C9FBE5",
    1:     "#FF0092",
    1:     "#22FFA7",
    1:     "#E3EE9E",
    1:     "#86CE00",
    1:     "#BC7196",
    1:     "#7E7DCD",
    1:     "#FC6955",
    1:     "#E48F72",
       ]
       
    1: from .colorbrewer import Set1, Pastel1, Dark2, Set2, Pastel2, Set3  # noqa: F401
    1: from .carto import Antique, Bold, Pastel, Prism, Safe, Vivid  # noqa: F401
       
       # Prefix variable names with _ so that they will not be added to the swatches
    1: _contents = dict(globals())
   30: for _k, _cols in _contents.items():
   29:     if _k.startswith("_") or _k == "swatches" or _k.endswith("_r"):
               continue
   19:     globals()[_k + "_r"] = _cols[::-1]
