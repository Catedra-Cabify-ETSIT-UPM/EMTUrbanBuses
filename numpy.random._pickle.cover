    1: from .mtrand import RandomState
    1: from .philox import Philox
    1: from .pcg64 import PCG64
    1: from .sfc64 import SFC64
       
    1: from .generator import Generator
    1: from .mt19937 import MT19937
       
    1: BitGenerators = {'MT19937': MT19937,
    1:                  'PCG64': PCG64,
    1:                  'Philox': Philox,
    1:                  'SFC64': SFC64,
                        }
       
       
    1: def __generator_ctor(bit_generator_name='MT19937'):
           """
           Pickling helper function that returns a Generator object
       
           Parameters
           ----------
           bit_generator_name: str
               String containing the core BitGenerator
       
           Returns
           -------
           rg: Generator
               Generator using the named core BitGenerator
           """
           if bit_generator_name in BitGenerators:
               bit_generator = BitGenerators[bit_generator_name]
           else:
               raise ValueError(str(bit_generator_name) + ' is not a known '
                                                          'BitGenerator module.')
       
           return Generator(bit_generator())
       
       
    1: def __bit_generator_ctor(bit_generator_name='MT19937'):
           """
           Pickling helper function that returns a bit generator object
       
           Parameters
           ----------
           bit_generator_name: str
               String containing the name of the BitGenerator
       
           Returns
           -------
           bit_generator: BitGenerator
               BitGenerator instance
           """
           if bit_generator_name in BitGenerators:
               bit_generator = BitGenerators[bit_generator_name]
           else:
               raise ValueError(str(bit_generator_name) + ' is not a known '
                                                          'BitGenerator module.')
       
           return bit_generator()
       
       
    1: def __randomstate_ctor(bit_generator_name='MT19937'):
           """
           Pickling helper function that returns a legacy RandomState-like object
       
           Parameters
           ----------
           bit_generator_name: str
               String containing the core BitGenerator
       
           Returns
           -------
           rs: RandomState
               Legacy RandomState using the named core BitGenerator
           """
           if bit_generator_name in BitGenerators:
               bit_generator = BitGenerators[bit_generator_name]
           else:
               raise ValueError(str(bit_generator_name) + ' is not a known '
                                                          'BitGenerator module.')
       
           return RandomState(bit_generator())
