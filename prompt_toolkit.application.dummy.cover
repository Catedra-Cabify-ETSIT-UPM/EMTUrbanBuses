    1: from __future__ import unicode_literals
    1: from .application import Application
    1: from prompt_toolkit.input import DummyInput
    1: from prompt_toolkit.output import DummyOutput
       
       __all__ = [
    1:     'DummyApplication',
       ]
       
       
    2: class DummyApplication(Application):
           """
           When no :class:`.Application` is running,
           :func:`.get_app` will run an instance of this :class:`.DummyApplication` instead.
    1:     """
    1:     def __init__(self):
               super(DummyApplication, self).__init__(output=DummyOutput(), input=DummyInput())
       
    1:     def run(self):
               raise NotImplementedError('A DummyApplication is not supposed to run.')
       
    1:     def run_async(self):
               raise NotImplementedError('A DummyApplication is not supposed to run.')
       
    1:     def run_system_command(self):
               raise NotImplementedError
       
    1:     def suspend_to_background(self):
               raise NotImplementedError
