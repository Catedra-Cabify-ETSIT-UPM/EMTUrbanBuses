       """
       Asyncronous event implementation.
    1: """
    1: from __future__ import unicode_literals
    1: from .future import Future
       
       __all__ = [
    1:     'Event'
       ]
       
       
    2: class Event(object):
           """
           Like `asyncio.event`.
       
           The state is intially false.
    1:     """
    1:     def __init__(self):
               self._state = False
               self._waiting_futures = []
       
    1:     def is_set(self):
               return self._state
       
    1:     def clear(self):
               self._state = False
       
    1:     def set(self):
               self._state = True
               futures = self._waiting_futures
               self._waiting_futures = []
       
               for f in futures:
                   f.set_result(None)
       
    1:     def wait(self):
               if self._state:
                   return Future.succeed(None)
               else:
                   f = Future()
                   self._waiting_futures.append(f)
                   return f
