    1: """Abstract base class for kernel managers."""
       
       # Copyright (c) Jupyter Development Team.
       # Distributed under the terms of the Modified BSD License.
       
    1: import abc
       
    1: from ipython_genutils.py3compat import with_metaclass
       
       
    2: class KernelManagerABC(with_metaclass(abc.ABCMeta, object)):
           """KernelManager ABC.
       
           The docstrings for this class can be found in the base implementation:
       
           `jupyter_client.kernelmanager.KernelManager`
    1:     """
       
    1:     @abc.abstractproperty
           def kernel(self):
               pass
       
           #--------------------------------------------------------------------------
           # Kernel management
           #--------------------------------------------------------------------------
       
    1:     @abc.abstractmethod
           def start_kernel(self, **kw):
               pass
       
    1:     @abc.abstractmethod
    1:     def shutdown_kernel(self, now=False, restart=False):
               pass
       
    1:     @abc.abstractmethod
    1:     def restart_kernel(self, now=False, **kw):
               pass
       
    1:     @abc.abstractproperty
           def has_kernel(self):
               pass
       
    1:     @abc.abstractmethod
           def interrupt_kernel(self):
               pass
       
    1:     @abc.abstractmethod
           def signal_kernel(self, signum):
               pass
       
    1:     @abc.abstractmethod
           def is_alive(self):
               pass
