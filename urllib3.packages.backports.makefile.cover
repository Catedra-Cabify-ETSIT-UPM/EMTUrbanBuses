       # -*- coding: utf-8 -*-
       """
       backports.makefile
       ~~~~~~~~~~~~~~~~~~
       
       Backports the Python 3 ``socket.makefile`` method for use with anything that
       wants to create a "fake" socket object.
    1: """
    1: import io
       
    1: from socket import SocketIO
       
       
       def backport_makefile(self, mode="r", buffering=None, encoding=None,
    1:                       errors=None, newline=None):
           """
           Backport of ``socket.makefile`` from Python 3.5.
           """
    1:     if not set(mode) <= {"r", "w", "b"}:
               raise ValueError(
                   "invalid mode %r (only r, w, b allowed)" % (mode,)
               )
    1:     writing = "w" in mode
    1:     reading = "r" in mode or not writing
    1:     assert reading or writing
    1:     binary = "b" in mode
    1:     rawmode = ""
    1:     if reading:
    1:         rawmode += "r"
    1:     if writing:
               rawmode += "w"
    1:     raw = SocketIO(self, rawmode)
    1:     self._makefile_refs += 1
    1:     if buffering is None:
    1:         buffering = -1
    1:     if buffering < 0:
    1:         buffering = io.DEFAULT_BUFFER_SIZE
    1:     if buffering == 0:
               if not binary:
                   raise ValueError("unbuffered streams must be binary")
               return raw
    1:     if reading and writing:
               buffer = io.BufferedRWPair(raw, raw, buffering)
    1:     elif reading:
    1:         buffer = io.BufferedReader(raw, buffering)
           else:
               assert writing
               buffer = io.BufferedWriter(raw, buffering)
    1:     if binary:
    1:         return buffer
           text = io.TextIOWrapper(buffer, encoding, errors, newline)
           text.mode = mode
           return text
