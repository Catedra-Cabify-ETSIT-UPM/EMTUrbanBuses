       # -*- coding: utf-8 -*-
       """Payload system for IPython.
       
       Authors:
       
       * Fernando Perez
       * Brian Granger
    1: """
       
       #-----------------------------------------------------------------------------
       #       Copyright (C) 2008-2011 The IPython Development Team
       #
       #  Distributed under the terms of the BSD License.  The full license is in
       #  the file COPYING, distributed as part of this software.
       #-----------------------------------------------------------------------------
       
       #-----------------------------------------------------------------------------
       # Imports
       #-----------------------------------------------------------------------------
       
    1: from traitlets.config.configurable import Configurable
    1: from traitlets import List
       
       #-----------------------------------------------------------------------------
       # Main payload class
       #-----------------------------------------------------------------------------
       
    2: class PayloadManager(Configurable):
       
    1:     _payload = List([])
       
    1:     def write_payload(self, data, single=True):
               """Include or update the specified `data` payload in the PayloadManager.
       
               If a previous payload with the same source exists and `single` is True,
               it will be overwritten with the new one.
               """
       
               if not isinstance(data, dict):
                   raise TypeError('Each payload write must be a dict, got: %r' % data)
       
               if single and 'source' in data:
                   source = data['source']
                   for i, pl in enumerate(self._payload):
                       if 'source' in pl and pl['source'] == source:
                           self._payload[i] = data
                           return
       
               self._payload.append(data)
       
    1:     def read_payload(self):
               return self._payload
       
    1:     def clear_payload(self):
               self._payload = []
