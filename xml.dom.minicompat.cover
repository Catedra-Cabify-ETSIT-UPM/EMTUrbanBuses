       """Python version compatibility support for minidom.
       
       This module contains internal implementation details and
       should not be imported; use xml.dom.minidom instead.
    1: """
       
       # This module should only be imported using "import *".
       #
       # The following names are defined:
       #
       #   NodeList      -- lightest possible NodeList implementation
       #
       #   EmptyNodeList -- lightest possible NodeList that is guaranteed to
       #                    remain empty (immutable)
       #
       #   StringTypes   -- tuple of defined string types
       #
       #   defproperty   -- function used in conjunction with GetattrMagic;
       #                    using these together is needed to make them work
       #                    as efficiently as possible in both Python 2.2+
       #                    and older versions.  For example:
       #
       #                        class MyClass(GetattrMagic):
       #                            def _get_myattr(self):
       #                                return something
       #
       #                        defproperty(MyClass, "myattr",
       #                                    "return some value")
       #
       #                    For Python 2.2 and newer, this will construct a
       #                    property object on the class, which avoids
       #                    needing to override __getattr__().  It will only
       #                    work for read-only attributes.
       #
       #                    For older versions of Python, inheriting from
       #                    GetattrMagic will use the traditional
       #                    __getattr__() hackery to achieve the same effect,
       #                    but less efficiently.
       #
       #                    defproperty() should be used for each version of
       #                    the relevant _get_<property>() function.
       
    1: __all__ = ["NodeList", "EmptyNodeList", "StringTypes", "defproperty"]
       
    1: import xml.dom
       
    1: StringTypes = (str,)
       
       
    2: class NodeList(list):
    1:     __slots__ = ()
       
    1:     def item(self, index):
               if 0 <= index < len(self):
                   return self[index]
       
    1:     def _get_length(self):
               return len(self)
       
    1:     def _set_length(self, value):
               raise xml.dom.NoModificationAllowedErr(
                   "attempt to modify read-only attribute 'length'")
       
    1:     length = property(_get_length, _set_length,
    1:                       doc="The number of nodes in the NodeList.")
       
           # For backward compatibility
    1:     def __setstate__(self, state):
               if state is None:
                   state = []
               self[:] = state
       
       
    2: class EmptyNodeList(tuple):
    1:     __slots__ = ()
       
    1:     def __add__(self, other):
               NL = NodeList()
               NL.extend(other)
               return NL
       
    1:     def __radd__(self, other):
               NL = NodeList()
               NL.extend(other)
               return NL
       
    1:     def item(self, index):
               return None
       
    1:     def _get_length(self):
               return 0
       
    1:     def _set_length(self, value):
               raise xml.dom.NoModificationAllowedErr(
                   "attempt to modify read-only attribute 'length'")
       
    1:     length = property(_get_length, _set_length,
    1:                       doc="The number of nodes in the NodeList.")
       
       
    1: def defproperty(klass, name, doc):
   14:     get = getattr(klass, ("_get_" + name))
   14:     def set(self, value, name=name):
               raise xml.dom.NoModificationAllowedErr(
                   "attempt to modify read-only attribute " + repr(name))
   14:     assert not hasattr(klass, "_set_" + name), \
                  "expected not to find _set_" + name
   14:     prop = property(get, set, doc=doc)
   14:     setattr(klass, name, prop)
