       # Copyright (c) Jupyter Development Team.
       # Distributed under the terms of the Modified BSD License.
       
       """Controller class.
       
       Represents a Gamepad or Joystick controller.
    1: """
       
    1: from .valuewidget import ValueWidget
    1: from .widget import register, widget_serialization
    1: from .domwidget import DOMWidget
    1: from .widget_core import CoreWidget
    1: from .trait_types import TypedTuple
    1: from traitlets import Bool, Int, Float, Unicode, Instance
       
       
    2: @register
    1: class Button(DOMWidget, ValueWidget, CoreWidget):
    1:     """Represents a gamepad or joystick button."""
    1:     value = Float(min=0.0, max=1.0, read_only=True, help="The value of the button.").tag(sync=True)
    1:     pressed = Bool(read_only=True, help="Whether the button is pressed.").tag(sync=True)
       
    1:     _view_name = Unicode('ControllerButtonView').tag(sync=True)
    1:     _model_name = Unicode('ControllerButtonModel').tag(sync=True)
       
       
    2: @register
    1: class Axis(DOMWidget, ValueWidget, CoreWidget):
    1:     """Represents a gamepad or joystick axis."""
    1:     value = Float(min=-1.0, max=1.0, read_only=True, help="The value of the axis.").tag(sync=True)
       
    1:     _view_name = Unicode('ControllerAxisView').tag(sync=True)
    1:     _model_name = Unicode('ControllerAxisModel').tag(sync=True)
       
       
    2: @register
    1: class Controller(DOMWidget, CoreWidget):
    1:     """Represents a game controller."""
    1:     index = Int(help="The id number of the controller.").tag(sync=True)
       
           # General information about the gamepad, button and axes mapping, name.
           # These values are all read-only and set by the JavaScript side.
    1:     name = Unicode(read_only=True, help="The name of the controller.").tag(sync=True)
    1:     mapping = Unicode(read_only=True, help="The name of the control mapping.").tag(sync=True)
    1:     connected = Bool(read_only=True, help="Whether the gamepad is connected.").tag(sync=True)
    1:     timestamp = Float(read_only=True, help="The last time the data from this gamepad was updated.").tag(sync=True)
       
           # Buttons and axes - read-only
    1:     buttons = TypedTuple(trait=Instance(Button), read_only=True, help="The buttons on the gamepad.").tag(sync=True, **widget_serialization)
    1:     axes = TypedTuple(trait=Instance(Axis), read_only=True, help="The axes on the gamepad.").tag(sync=True, **widget_serialization)
       
    1:     _view_name = Unicode('ControllerView').tag(sync=True)
    1:     _model_name = Unicode('ControllerModel').tag(sync=True)
